#!/bin/sh

prefix=/usr/local
jail_path=/compat/ubuntu
ubuntu_version=bionic
ld_version=2.27

bindir="${prefix}/bin"
appsdir="${prefix}/share/applications"
jail_bindir="${jail_path}/bin"

apt_packages="gnupg pulseaudio"
pkg_list="debootstrap pulseaudio"

jail_mount_points="
/proc
/sys
/dev
/dev/fd
/dev/shm
/tmp
/home
"

mk_mount_dirs()
{
	local dir p
	for p in ${jail_mount_points}; do
		dir="${jail_path}/$p"
		[ ! -d "${dir}" ] && mkdir -p "${dir}"
	done
}

umount_jail()
{
	local mntpts _jail_path p _p

	_jail_path=$(realpath "${jail_path}")
	[ $? -ne 0 -o -z "${_jail_path}" ] && exit 1
	mntpts=$(mount -p | awk -F'[ \t]+' -v jail=${_jail_path} '
		$2 ~ sprintf("^%s/", jail) {
			mp[n++] = $2
		}
		END {
			while (--n >= 0) print mp[n]
		}
	')
	for p in ${mntpts}; do
		_p=$(realpath "$p")
		[ $? -ne 0 -o -z "${_p}" ] && exit 1
		umount "${_p}" || exit 1
		if (mount -p | grep -q "${_p}/"); then
			echo "Couldn't unmount ${_p}" >&2
			exit 1
		fi
	done
}

install_rc()
{
	install -m 555 rc.d/ubuntu "${prefix}/etc/rc.d"
}

install_steam_utils()
{
	pkg info --exists linux-steam-utils && return
	pkg fetch -y -o /tmp linux-steam-utils || exit 1
	(cd / && tar -xf /tmp/All/linux-steam-utils-*.txz \
		--exclude '^+COMPACT_MANIFEST' \
		--exclude '^+MANIFEST')
}

install_packages()
{
	for p in ${pkg_list}; do
		pkg info --exists $p && continue
		pkg install -y $p
	done
}

fix_ld_path()
{
	(cd ${jail_path}/lib64 && \
		(unlink ./ld-linux-x86-64.so.2; \
			ln -s ../lib/x86_64-linux-gnu/ld-${ld_version}.so \
			ld-linux-x86-64.so.2))
}

install_apt_packages()
{
	chroot ${jail_path} /bin/bash -c 'apt update'
	chroot ${jail_path} /bin/bash -c 'apt remove -y rsyslog'
	for p in ${apt_packages}; do
		chroot ${jail_path} /bin/bash -c "apt install -y $p"
	done
}

build_scripts()
{
	for s in $(find bin jail/bin rc.d -name "*.in"); do
		sed -E "s#@JAIL_PATH@#${jail_path}#g" < $s > ${s%.in}
	done
}

install_chrome()
{
	local cmd
	cmd="apt-key add linux_signing_key.pub && apt update && "
	cmd="${cmd} apt install -y google-chrome-stable"

	if [ -x ${jail_path}/opt/google/chrome/chrome ]; then
		echo "Chrome already installed" >&2
		exit 1
	fi
	echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ " \
	     "stable main" > \
		"${jail_path}/etc/apt/sources.list.d/google-chrome.list"
	fetch -o ${jail_path} https://dl.google.com/linux/linux_signing_key.pub
	chroot ${jail_path} /bin/bash -c "${cmd}"
	[ -d "${jail_path}/${prefix}/share/fonts" ] && \
		rmdir "${jail_path}/${prefix}/share/fonts"
	install -m 555 jail/bin/chrome "${jail_bindir}"
	install -m 555 bin/chrome "${bindir}"
	install -m 0644 chrome.desktop "${appsdir}"
}

deinstall_chrome()
{
	chroot ${jail_path} /bin/bash -c "apt remove -y google-chrome-stable"
	rm -f "${appsdir}/chrome.desktop"
	rm -f "${bindir}/chrome"
	rm -f "${jail_bindir}/chrome"
}

install_brave()
{
	if [ -x ${jail_path}/opt/brave.com/brave/brave ]; then
		echo "Brave already installed" >&2
		exit 1
	fi
	chroot ${jail_path} /bin/bash -c \
		"apt install -y apt-transport-https curl"
	chroot ${jail_path} /bin/bash -c \
		'curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -'
	chroot ${jail_path} /bin/bash -c \
		'echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main" > /etc/apt/sources.list.d/brave-browser-release.list'
	chroot ${jail_path} /bin/bash -c \
		"apt update && apt install -y brave-browser"
	rmdir "${jail_path}/${prefix}/share/fonts"
	install -m 555 jail/bin/brave "${jail_bindir}"
	install -m 555 bin/brave "${bindir}"
	install -m 0644 brave.desktop "${appsdir}"
}

deinstall_brave()
{
	chroot ${jail_path} /bin/bash -c "apt remove -y brave-browser"
	rm -f "${appsdir}/brave.desktop"
	rm -f "${bindir}/brave"
	rm -f "${jail_bindir}/brave"
}

symlink_icons()
{
	local name i
	[ ! -d ${jail_path}/usr/share/icons ] && \
		mkdir -p ${jail_path}/usr/share/icons
	for i in ${prefix}/share/icons/*; do
		[ ! -d $i ] && continue
		name=$(basename $i)
		[ -e ${jail_path}/usr/share/icons/${name} ] && continue
		ln -s $i ${jail_path}/usr/share/icons
	done
}

symlink_themes()
{
	local name i
	[ ! -d ${jail_path}/usr/share/themes ] && \
		mkdir -p ${jail_path}/usr/share/themes
	for i in ${prefix}/share/themes/*; do
		[ ! -d $i ] && continue
		name=$(basename $i)
		[ -e ${jail_path}/usr/share/icons/${name} ] && continue
		ln -s $i ${jail_path}/usr/share/themes
	done
}

set_timezone()
{
	printf "0.0 0 0.0\n0\nUTC\n" > ${jail_path}/etc/adjtime
	cp /var/db/zoneinfo "${jail_path}/etc/timezone" \
		${jail_path}/etc/localtime
	rm -f ${jail_path}/etc/localtime
	ln -s "/usr/share/zoneinfo/$(cat /var/db/zoneinfo)" \
		${jail_path}/etc/localtime
	chroot ${jail_path} /bin/bash -c \
		"dpkg-reconfigure --frontend noninteractive tzdata"
}

install_jail_base()
{
	[ -f ${jail_path}/etc/os-release ] && return
	mk_mount_dirs
	install_rc
	sysrc linux_enable=NO
	sysrc ubuntu_enable=YES
	service ubuntu start || exit 1
	install_steam_utils
	install_packages
	debootstrap --arch=amd64 --no-check-gpg ${ubuntu_version} ${jail_path}
	echo "APT::Cache-Start 251658240;" > \
		${jail_path}/etc/apt/apt.conf.d/00aptitude
	echo "deb http://archive.ubuntu.com/ubuntu/ ${ubuntu_version} " \
	     "main restricted universe multiverse" > \
		${jail_path}/etc/apt/sources.list
	fix_ld_path
	set_timezone
	service ubuntu start
	install_apt_packages
	symlink_icons
	symlink_themes
}

deinstall_jail_base()
{
	local path
	path=$(realpath ${jail_path})
	[ $? -ne 0 ] && exit 1

	if [ "${path}" = "/" ]; then
		echo "jail_path must not be '/'" >&2
		exit 1
	fi
	umount_jail
	rm -rf "${path}"
	rm -f "${prefix}/etc/rc.d/ubuntu"
	sysrc -x ubuntu_enable
}

upgrade_jail()
{
	chroot ${jail_path} /bin/bash -c "apt update && apt upgrade"
}

cleanup()
{
	rm -f bin/chrome bin/brave jail/bin/chrome jail/bin/brave rc.d/ubuntu
}

usage()
{
	echo "Usage: $0 install <brave|chrome>"
	echo "       $0 deinstall <brave|chrome>"
	echo "       $0 jail <create|upgrade|delete>"
	echo "       $0 symlink <icons|themes>"
	echo "       $0 clean"
	exit 1
}

if [ $(id -u) -ne 0 ]; then
	echo "This script must be run as root" 1>&2
	exit 1
fi

[ $# -eq 0 ] && usage

while [ $# -gt 0 ]; do
	case "$1" in
	install)
		case $2 in
		brave|chrome)
			browser=$2
			build_scripts
			install_jail_base
			eval install_${browser}
			;;
		*)
			usage
			;;
		esac
		shift
		;;
	deinstall)
		case $2 in
		brave|chrome)
			browser=$2
			eval deinstall_${browser}
			exit 0
			;;
		*)
			usage
			;;
		esac
		shift
		;;
	clean)
		cleanup
		exit 0
		;;
	jail)
		case $2 in
		create)
			build_scripts
			install_jail_base
			exit 0
			;;
		delete)
			deinstall_jail_base
			exit 0
			;;
		upgrade)
			upgrade_jail
			exit 0
			;;
		*)
			usage
			;;
		esac
		shift
		;;
	symlink)
		case $2 in
		icons|themes)
			eval symlink_$2
			exit 0
			;;
		*)
			usage
			;;
		esac
		shift
		;;
	*)
		usage
		;;
	esac
	shift
done

